<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <a class="navbar-brand" href="/">CreatorSpace</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
            aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
            <li class="nav-item">
                <a class="nav-link" href="/">Home</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/download">Download</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/creators">Creators</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/library">Library</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="/subscriptions">Subscriptions</a>
            </li>
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button"
                   data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                    <i class="fas fa-user">Account</i>
                </a>
                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdownMenuLink">
                    <a class="dropdown-item" href="/account">Account Settings</a>
                    {{ if .User }}
                        {{ if eq .User.AccountType "admin" }}
                            <hr>
                            <a class="dropdown-item" href="/server-settings">Server Settings</a>
                            <a class="dropdown-item" href="/user-management">User Management</a>
                            <a class="dropdown-item" href="/library-management">Library Management</a>
                            <hr>
                        {{ end }}
                    {{ end }}
                    <a class="dropdown-item" href="/logout">Logout</a>
                </div>
            </li>
            <li class="search-bar">
                <input type="text" id="search-bar" placeholder="Search" onkeyup="searchVideos(this.value)">
            </li>
        </ul>
    </div>
</nav>

<div class="search-results-container">
    <ul id="search-results"></ul>
</div> 

<script>
    // enable on hover dropdown menu using standard javascript
    let dropdown = document.getElementsByClassName("dropdown-toggle");
    let i;

    for (i = 0; i < dropdown.length; i++) {
        dropdown[i].addEventListener("click", function () {
            this.classList.toggle("active");
            let dropdownContent = this.nextElementSibling;
            if (dropdownContent.style.display === "block") {
                dropdownContent.style.display = "none";
            } else {
                dropdownContent.style.display = "block";
            }
        });
    }
    lastTerm = "";
    //a search bar that hits the /api/search/videos?q=${search-term} endpoint. Search on each key stroke and return a list of suggestions during typing
    function searchVideos(searchTerm) {
        if (searchTerm.length === 0) {
            document.getElementById("search-results").innerHTML = "";
            return;
        } else if (lastTerm != searchTerm) {
            let xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function () {
                if (this.readyState === 4 && this.status === 200) {
                    let response = JSON.parse(this.responseText);
                    let searchResults = document.getElementById("search-results");
                    searchResults.style.display = "block";
                    searchResults.innerHTML = "";
                    responseData = response["data"]
                    for (let i = 0; i < responseData.length; i++) {
                        let video = responseData[i];
                        let videoTitle = video["Title"];
                        let videoID = video["VideoID"];
                        let videoChannel = video["ChannelTitle"];
                        let videoLength = video["Length"];
                        let videoType = video["VideoType"];
                        let videoThumbnail = `/api/media/${videoID}/thumbnail`;

                        /* add elements to the search results dropdown with the thumbnail, channel title, and video title present */
                        let searchResult = document.createElement("a");
                        searchResult.href = `/watch/${videoID}`;
                        searchResult.innerHTML = `
                            <li class="search-result">
                                <span class="search-result-thumbnail">
                                    <img class="search-result-thumbnail" src="${videoThumbnail}" alt="thumbnail">
                                </span>
                                <span class="search-result-info">
                                    <span class="search-result-channel">
                                        ${videoChannel} | 
                                    </span>
                                    <span class="search-result-title">
                                        ${videoTitle}
                                    </span>
                                </span>
                                </span>
                            </li>
                        `;
                        searchResults.appendChild(searchResult);
                        lastTerm = searchTerm;
                    }
                }
            };
            
            xhr.open("GET", `/api/search/videos?q=${searchTerm}&limit=5`, true);
            xhr.send();
        }
    }

    // hide the search results when the user clicks outside of the search bar or no results are shown
    document.addEventListener("click", function (event) {
        let searchResults = document.getElementById("search-results");
        if (event.target.id !== "search-bar") {
            searchResults.style.display = "none";
        }
        // if clicking back in and data is present, show the search results and highlight the text in the search bar
        else {
            if (searchResults.innerHTML.length > 0) {
                searchResults.style.display = "block";
            }
        }
    });
</script>
