<!DOCTYPE html>
<html>
<head>
	<title>Subscriptions - CreatorSpace</title>
	<link rel="icon" type="image/x-icon" href="/favicon.ico">
	<link rel="stylesheet" href="/assets/lib/bootstrap-5.3.0-alpha3-dist/css/bootstrap.min.css">
	<script src="/assets/lib/bootstrap-5.3.0-alpha3-dist/js/bootstrap.bundle.min.js"></script>
	<link rel="stylesheet" type="text/css" href="/assets/css/styles.css">
	<link rel="stylesheet" type="text/css" href="/assets/css/videos.css">

	<meta name="viewport" content="width=device-width, initial-scale=1">
	<meta name="description" content="CreatorSpace is a tool to archive and watch your favorite creators. Add to or view your current collection of videos.">
	<meta name="keywords" content="creator, archive, youtube, twitch, video, collection, watch">
	<meta name="author" content="CreatorSpace">
	<meta property="og:image" content="{{.ServerPath}}/assets/img/banner.png">
</head>

<body>
{{template "navbar.tmpl" }}

{{define "video"}}
<div class="video-data">
	<div class="creator-info">
	<a href="/creators/{{.ChannelID}}">
		{{if eq .VideoType "Twitch"}}
		<img src="/api/twitch/creators/{{.ChannelID}}/thumbnail" alt={{.ChannelTitle}}>
		{{else}}
		<img src="/api/youtube/creators/{{.ChannelID}}/thumbnail" alt={{.ChannelTitle}}>
		{{end}}
		<span class="creator-info-text">{{.ChannelTitle}}</span>
	</a>
	</div>
	<div class="video">
	<div class="thumbnail-box">
		<div class="image-container">
			<a href="/watch/{{.VideoID}}">
				<img src="/api/media/{{.VideoID}}/thumbnail" alt="{{.Title}}">
			</a>
			<div class="image-overlay">
				<div class="mark-watched">
					{{if not .Watched}}
						<span class="checkmark small-overlay" onclick="sendCompletedRequestAlert('{{.VideoID}}', '{{.Title}}')">
							<svg viewBox="0 0 24 24">
								<path fill-rule="evenodd" d="M6.72 13.278l-3.457-3.428a.562.562 0 0 1 0-.794l.909-.903a.552.552 0 0 1 .782 0L7 10.76l6.14-6.08a.552.552 0 0 1 .782 0l.908.903a.562.562 0 0 1 0 .794l-6.69 6.638a.564.564 0 0 1-.393.164.564.564 0 0 1-.393-.164z"/>
							</svg>
						</span>
					{{end}}
				</div>
				{{if .SponsorTag}}
					<span class="sponsor-tag small-overlay tag-{{.SponsorTag}}">
						<img src="/assets/img/PlayerStartIconSponsorBlocker.svg">
						<span class="tag-text">{{.SponsorTag}}</span>
					</span>
				{{end}}
			</div>
		</div>
		
		
		{{if .Watched}}
		<span class="watched-text"></span>
		{{end}}
		{{if eq .Availability "unavailable"}}
			<span class="unavailable-text"></span>
		{{end}}
		{{if eq .Availability "unlisted"}}
			<span class="unlisted-text"></span>
		{{end}}
		{{if eq .Availability "private"}}
			<span class="private-text"></span>
		{{end}}
		{{if .Progress}}
			<div class="in-progress-text" style="width: {{.Progress}}%"></div>
			<div class="in-progress-bkg"></div>
		{{end}}
		
		<div class="length">{{.Length}}</div>
	</div>
	<div class="info">
		<h3><a href="/watch/{{.VideoID}}">{{.Title}}</a></h3>
		<ul>
		{{if .Views}}
			<li>{{.Views}} views</li>
		{{end}}
		<li>Published on {{.PublishedAt}}</li>
		<li>By <a href="/creators/{{.ChannelID}}">{{.ChannelTitle}}</a></li>
		</ul>
		<a href="/watch/{{.VideoID}}">
		<p class="description">{{.Description}}</p>
		</a>
	</div>
	</div>
	<hr />
</div>
{{end}}

<div class="main-content">
	    <div class="content-header">
			<div class="sortfilter row py-2">
				<div class="col-md-4 text-center text-md-start">
					<div class="dropdown">
						<button class="btn btn-secondary dropdown-toggle" type="button" id="filterDropdown" data-bs-toggle="dropdown" aria-expanded="false">
							Filter
						</button>
						<ul class="dropdown-menu" aria-labelledby="filterDropdown">
							<li><a class="dropdown-item" href="javascript:void(0)" data-value="all">All</a></li>
							<li><a class="dropdown-item" href="javascript:void(0)" data-value="public">Public</a></li>
							<li><a class="dropdown-item" href="javascript:void(0)" data-value="unlisted">Unlisted</a></li>
							<li><a class="dropdown-item" href="javascript:void(0)" data-value="private">Private</a></li>
							<li><a class="dropdown-item" href="javascript:void(0)" data-value="unavailable">Unavailable</a></li>
						</ul>
					</div>
				</div>
				<div class="col-md-4 text-center">
					<span>Subscriptions</span>
				</div>
				<div class="col-md-4 text-center text-md-end">
					<div class="dropdown">
						<button class="btn btn-secondary dropdown-toggle" type="button" id="sortDropdown" data-bs-toggle="dropdown" aria-expanded="false">
							Sort
						</button>
						<ul class="dropdown-menu" aria-labelledby="sortDropdown">
							<li><a class="dropdown-item" href="javascript:void(0)" data-value="newest">Newest</a></li>
							<li><a class="dropdown-item" href="javascript:void(0)" data-value="oldest">Oldest</a></li>
							<li><a class="dropdown-item" href="javascript:void(0)" data-value="mostviews">Most Views</a></li>
							<li><a class="dropdown-item" href="javascript:void(0)" data-value="leastviews">Least Views</a></li>
							<li><a class="dropdown-item" href="javascript:void(0)" data-value="mostlikes">Most Likes</a></li>
							<li><a class="dropdown-item" href="javascript:void(0)" data-value="leastlikes">Least Likes</a></li>
						</ul>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div id="container">
		{{range .Videos}}
			<div class="video-row">
			{{template "video" .}}
			</div>
		{{end}}
	</div>
	<section id="page-select">
	{{ if .PrevPage }}
	{{ if .Filter }}
	{{ if .Sort }}
		<a href="/subscriptions?page={{.PrevPage}}&filter={{ .Filter }}&sort={{ .Sort }}">Back Page</a>
	{{ else }}
		<a href="/subscriptions?page={{.PrevPage}}&filter={{ .Filter }}">Back Page</a>
	{{ end }}
	{{ else }}
		{{ if .Sort }}
			<a href="/subscriptions?page={{.PrevPage}}&sort={{ .Sort }}">Back Page</a>
		{{ else }}
			<a href="/subscriptions?page={{.PrevPage}}">Back Page</a>
		{{ end }}
	{{ end }}
		<span> | </span>
	{{ end }}
	{{ if or .PrevPage .NextPage }}
			<input type="text" id="page-number" name="page-number" placeholder="#">
	{{ end }}
	{{ if .NextPage }}
		<span> | </span>
		{{ if .Filter }}
		{{ if .Sort }}
			<a href="/subscriptions?page={{.NextPage}}&filter={{ .Filter }}&sort={{ .Sort }}">Next Page</a>
		{{ else }}
			<a href="/subscriptions?page={{.NextPage}}&filter={{ .Filter }}">Next Page</a>
		{{ end }}
		{{ else }}
			{{ if .Sort }}
				<a href="/subscriptions?page={{.NextPage}}&sort={{ .Sort }}">Next Page</a>
			{{ else }}
				<a href="/subscriptions?page={{.NextPage}}">Next Page</a>
			{{ end }}
		{{ end }}
	{{ end }}
</section>
</div>
<script>
document.getElementById("page-number").addEventListener("keyup", function(event) {
	if (event.keyCode === 13) {
		event.preventDefault();
		let templocation = "/subscriptions?page=" + document.getElementById("page-number").value;
		{{ if .Filter }}
			templocation += "&filter={{ .Filter }}"
		{{ end }}
		{{ if .Sort }}
			templocation += "&sort={{ .Sort }}"
		{{ end }}
		window.location.href = templocation
	}
});
	function sendCompletedRequestAlert(video_id, video_title, data) {
        let xhr = new XMLHttpRequest();
        let user_id = "{{.UserID}}";
        xhr.open("POST", `/api/user/${user_id}/progress/${video_id}/complete`, true);
        xhr.send();
		// Get the image container and add <span class="watched-text"></span>
		let imageContainer = document.querySelector(`img[src="/api/media/${video_id}/thumbnail"]`).parentElement.parentElement;
		
        
        // Remove in-progress-text and in-progress-bkg if they exist
        let thumbBox = imageContainer.parentElement;
        let inProgressText = thumbBox.querySelector('.in-progress-text');
        let inProgressBkg = thumbBox.querySelector('.in-progress-bkg');
        if (inProgressText) {
            inProgressText.style.display = 'none'
        }
        if (inProgressBkg) {
            inProgressBkg.style.display = 'none'
        }
        
        let watchedText = document.createElement('span');
		watchedText.classList.add('watched-text');
		imageContainer.appendChild(watchedText);
        //alert(`Successfully marked ${video_title} as watched!`); //Adding watched-text instead
		// Get the checkmark from imageContainer and hide it
		let checkmark = imageContainer.querySelector('.checkmark');
		checkmark.style.display = 'none';
    }

let filterDropdown = document.querySelector('#filterDropdown');
    let sortDropdown = document.querySelector('#sortDropdown');
    let filterItems = document.querySelectorAll('#filterDropdown + .dropdown-menu .dropdown-item');
    let sortItems = document.querySelectorAll('#sortDropdown + .dropdown-menu .dropdown-item');

    filterItems.forEach(item => {
        item.addEventListener('click', () => {
            let curSort = "{{.Sort}}";
            updatePageWithParams(item.dataset.value, curSort);
        });
        // if item is set to {{.Filter}} then set the default dropdown text to that item
        if (item.dataset.value === "{{.Filter}}" && item.dataset.value !== "all") {
            filterDropdown.innerHTML = item.innerHTML;
        }
    });

    sortItems.forEach(item => {
        item.addEventListener('click', () => {
            let curFilter = "{{.Filter}}";
            updatePageWithParams(curFilter, item.dataset.value);
        });
        // if item is set to {{.Sort}} then set the default dropdown text to that item
        if (item.dataset.value === "{{.Sort}}" && item.dataset.value !== "newest") {
            sortDropdown.innerHTML = item.innerHTML;
        }
    });

function updatePageWithParams(filter, sort) {
        let baseUrl = window.location.origin + window.location.pathname;
        let searchParams = new URLSearchParams(window.location.search);

		searchParams.set('page', 1);

        if (filter) {
            searchParams.set('filter', filter);
        } else {
            searchParams.delete('filter');
        }

        if (sort) {
            searchParams.set('sort', sort);
        } else {
            searchParams.delete('sort');
        }
        
        // Update the window location
        window.location.href = `${baseUrl}?${searchParams.toString()}`;
    }
</script>
</body>
</html>
