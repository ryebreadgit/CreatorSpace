<!DOCTYPE html>
<html>
<head>
    <title>{{ .Creator.Name }} - CreatorSpace</title>
    <link rel="icon" type="image/x-icon" href="/favicon.ico">
    <link rel="stylesheet" href="/assets/lib/bootstrap-5.3.0-alpha3-dist/css/bootstrap.min.css">
    <script src="/assets/lib/bootstrap-5.3.0-alpha3-dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" type="text/css" href="/assets/css/styles.css">
    <link rel="stylesheet" type="text/css" href="/assets/css/videos.css">

    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="Watch {{ .Creator.Name }} on CreatorSpace.">
    
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<meta name="description" content="CreatorSpace is a tool to archive and watch your favorite creators. Add to or view your current collection of videos.">
	<meta name="keywords" content="creator, archive, youtube, twitch, video, collection, watch">
	<meta name="author" content="CreatorSpace">
	<meta property="og:image" content="/api/youtube/creators/{{.Creator.ChannelID}}/thumbnail">
</head>
<body>
{{template "navbar.tmpl" }}

<div class="image-header">
    <img src="/api/youtube/creators/{{.Creator.ChannelID}}/banner" alt="Creator Banner Image">
</div>
<section id="about-creator">
    <img src="/api/youtube/creators/{{.Creator.ChannelID}}/thumbnail" alt="{{.Creator.Name}}">
    <span class="creator-details">
        <h1>{{.Creator.Name}}</h1>
        <h3>{{.Creator.VideoCount}} Videos
            {{if .Creator.Subscribers}}
               | {{.Creator.Subscribers}} subscribers
            {{end}}
         </h3>
        {{ if eq .Creator.Platform "Twitch" }}
            <h3><a href="https://twitch.tv/{{.Creator.Name}}">View on Twitch</a></h3>
        {{ else }}
            <h3><a href="https://youtube.com/channel/{{.Creator.ChannelID}}">View on YouTube</a></h3>
        {{ end }}
        
    </span>
    <span> 
        <p class="description-text">{{ .Creator.Description }}</p> 
        {{ if .Subscribed }}
            <button id="unSubscribeBtn" class="btn btn-outline-danger">Unsubscribe</button>
        {{ else }}
            <button id="subscribeBtn" class="btn btn-danger">Subscribe</button>
        {{ end }}
    </span>
</section>
<section id="sort-filter-container">
    <div class="sortfilter row py-2">
            <div class="col-md-6 text-start">
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="filterDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        Filter
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="filterDropdown">
                        <li><a class="dropdown-item" href="javascript:void(0)" data-value="all">All</a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" data-value="public">Public</a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" data-value="unlisted">Unlisted</a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" data-value="private">Private</a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" data-value="unavailable">Unavailable</a></li>
                    </ul>
                </div>
            </div>
            <div class="col-md-6 text-end">
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="sortDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        Sort
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="sortDropdown">
                        <li><a class="dropdown-item" href="javascript:void(0)" data-value="newest">Newest</a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" data-value="oldest">Oldest</a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" data-value="mostviews">Most Views</a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" data-value="leastviews">Least Views</a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" data-value="mostlikes">Most Likes</a></li>
                        <li><a class="dropdown-item" href="javascript:void(0)" data-value="leastlikes">Least Likes</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</section>
<section id="video-type">
    {{ range .LinkedAccounts }}
        <a href="/creators/{{$.ChannelID}}/{{.Type}}" class="btn btn-primary btn-{{.Name}}">{{.Name}}</a>
    {{ end }}
</section>
<section id="video-list">
    <ul>
        {{ range .Videos }}
            <li>
                <div class="video-box">
                        <div class="thumbnail-box">
                            <a href="/watch/{{ .VideoID }}">
                                <div class="length">{{.Length}}</div>
                                {{if .Watched}}
                                <span class="watched-text"></span>
                                {{end}}
                                {{if eq .Availability "unavailable"}}
                                    <span class="unavailable-text"></span>
                                {{end}}
                                {{if eq .Availability "unlisted"}}
                                    <span class="unlisted-text"></span>
                                {{end}}
                                {{if eq .Availability "private"}}
                                    <span class="private-text"></span>
                                {{end}}
                                {{if .Progress}}
                                    <div class="in-progress-text" style="width: {{.Progress}}%"></div>
                                    <div class="in-progress-bkg"></div>
                                {{end}}
                            </a>
                            <div class="image-container">
                                <a href="/watch/{{ .VideoID }}">
                                    <img id="vid-img" src="/api/media/{{.VideoID}}/thumbnail" alt="{{.Title}}">
                                </a>
                                <div class="image-overlay">
                                    <div class="mark-watched">
                                        {{if not .Watched}}
                                            <span class="checkmark small-overlay" onclick="sendCompletedRequestAlert('{{.VideoID}}', '{{.Title}}')">
                                                <svg viewBox="0 0 24 24">
                                                    <path fill-rule="evenodd" d="M6.72 13.278l-3.457-3.428a.562.562 0 0 1 0-.794l.909-.903a.552.552 0 0 1 .782 0L7 10.76l6.14-6.08a.552.552 0 0 1 .782 0l.908.903a.562.562 0 0 1 0 .794l-6.69 6.638a.564.564 0 0 1-.393.164.564.564 0 0 1-.393-.164z"/>
                                                </svg>
                                            </span>
                                        {{end}}
                                    </div>
                                    {{if .SponsorTag}}
                                        <span class="sponsor-tag small-overlay tag-{{.SponsorTag}}">
                                            <img src="/assets/img/PlayerStartIconSponsorBlocker.svg">
                                            <span class="tag-text">{{.SponsorTag}}</span>
                                        </span>
                                    {{end}}
                                </div>
                            </div>
                        </div>
                        
                    <a href="/watch/{{ .VideoID }}">
                        <div id="vid-title">{{ .Title }}</div>
                        <div id="vid-info">
                        {{ if .Views }}
                            {{.Views}} Views - 
                        {{ end }}
                        {{ if .PublishedAt }}
                            {{.PublishedAt}}
                        {{ end }}
                        </div>
                    </a>
                </div>
            </li>
        {{ end }}
    </ul>
</section>
<section id="page-select">
      {{ if .PrevPage }}
      {{ if .Filter }}
      {{ if .Sort }}
          <a href="/creators/{{.Creator.ChannelID}}?page={{.PrevPage}}&filter={{ .Filter }}&sort={{ .Sort }}">Back Page</a>
      {{ else }}
          <a href="/creators/{{.Creator.ChannelID}}?page={{.PrevPage}}&filter={{ .Filter }}">Back Page</a>
      {{ end }}
      {{ else }}
          {{ if .Sort }}
              <a href="/creators/{{.Creator.ChannelID}}?page={{.PrevPage}}&sort={{ .Sort }}">Back Page</a>
          {{ else }}
              <a href="/creators/{{.Creator.ChannelID}}?page={{.PrevPage}}">Back Page</a>
          {{ end }}
      {{ end }}
          <span> | </span>
      {{ end }}
      {{ if or .PrevPage .NextPage }}
              <input type="text" id="page-number" name="page-number" placeholder="#">
      {{ end }}
      {{ if .NextPage }}
          <span> | </span>
          {{ if .Filter }}
          {{ if .Sort }}
              <a href="/creators/{{.Creator.ChannelID}}?page={{.NextPage}}&filter={{ .Filter }}&sort={{ .Sort }}">Next Page</a>
          {{ else }}
              <a href="/creators/{{.Creator.ChannelID}}?page={{.NextPage}}&filter={{ .Filter }}">Next Page</a>
          {{ end }}
          {{ else }}
              {{ if .Sort }}
                  <a href="/creators/{{.Creator.ChannelID}}?page={{.NextPage}}&sort={{ .Sort }}">Next Page</a>
              {{ else }}
                  <a href="/creators/{{.Creator.ChannelID}}?page={{.NextPage}}">Next Page</a>
              {{ end }}
          {{ end }}
      {{ end }}
  </section>
<script>
    var pageNumber = document.getElementById("page-number");
    if (pageNumber !== null) {
        document.getElementById("page-number").addEventListener("keyup", function(event) {
            if (event.keyCode === 13) {
                event.preventDefault();
                let templocation = "/creators/{{.Creator.ChannelID}}?page=" + document.getElementById("page-number").value;
                // check if filter is set
                if (window.location.href.includes("filter=")) {
                    templocation += "&filter=" + window.location.href.split("filter=")[1];
                }
                window.location.href = templocation
            }
        });
    }
    // replace links in description with hyperlinks, use regex to match links
    let descriptionText = document.querySelector(".description-text");
    let regex = /(https?:\/\/[^\s]+)/g;
    let description = descriptionText.innerHTML;
    let matches = description.match(regex);
    if (matches != null) {
        for (let match of matches) {
            description = description.replace(match, `<a href="${match}" target="_blank">${match}</a>`);
        }
        descriptionText.innerHTML = description;
    }
    // replace email addresses in description with mailto links
    regex = /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\.[a-zA-Z0-9_-]+)/g;
    description = descriptionText.innerHTML;
    matches = description.match(regex);
    if (matches != null) {
        for (let match of matches) {
            description = description.replace(match, `<a href="mailto:${match}">${match}</a>`);
        }
        descriptionText.innerHTML = description;
    }
    
var user_id = '{{.UserID}}'; // Replace with the actual user ID
var creator_id = '{{.Creator.ChannelID}}'; // Replace with the actual creator ID
var creator_title = '{{.Creator.Name}}'; // Replace with the actual creator title

  var subscribeBtn = document.getElementById('subscribeBtn');
    if (subscribeBtn !== null) {
    subscribeBtn.addEventListener('click', function() {

    // Send POST request
    var xhr = new XMLHttpRequest();
    xhr.open('POST', `/api/user/${user_id}/subscriptions/${creator_id}`, true);
    xhr.onload = function() {
      if (xhr.status === 200) {
        alert(`Successfully subscribed to ${creator_title}!`);
        subscribeBtn.disabled = true;
        subscribeBtn.innerHTML = 'Subscribed';
      } else {
        alert('Subscription failed.');
      }
    };
    xhr.onerror = function() {
      alert('Request failed.');
    };
    xhr.send();
  });
  }

  var unSubscribeBtn = document.getElementById('unSubscribeBtn');
  if (unSubscribeBtn !== null) {
  unSubscribeBtn.addEventListener('click', function() {
    // Send DELETE request
    var xhr = new XMLHttpRequest();
    xhr.open('DELETE', `/api/user/${user_id}/subscriptions/${creator_id}`, true);
    xhr.onload = function() {
      if (xhr.status === 200) {
        alert(`Successfully unsubscribed from ${creator_title}!`);
        unSubscribeBtn.disabled = true;
        unSubscribeBtn.innerHTML = 'Unsubscribed';
      } else {
        alert('Subscription failed.');
      }
    };
    xhr.onerror = function() {
      alert('Request failed.');
    };
    xhr.send();
  });
  }

    function sendCompletedRequestAlert(video_id, video_title, data) {
        let xhr = new XMLHttpRequest();
        let user_id = "{{.UserID}}";
        xhr.open("POST", `/api/user/${user_id}/progress/${video_id}/complete`, true);
        xhr.send();
		// Get the image container and add <span class="watched-text"></span>
		let imageContainer = document.querySelector(`img[src="/api/media/${video_id}/thumbnail"]`).parentElement.parentElement;
		
        
        // Remove in-progress-text and in-progress-bkg if they exist
        let thumbBox = imageContainer.parentElement;
        let inProgressText = thumbBox.querySelector('.in-progress-text');
        let inProgressBkg = thumbBox.querySelector('.in-progress-bkg');
        if (inProgressText) {
            inProgressText.style.display = 'none'
        }
        if (inProgressBkg) {
            inProgressBkg.style.display = 'none'
        }
        
        let watchedText = document.createElement('span');
		watchedText.classList.add('watched-text');
		imageContainer.appendChild(watchedText);
        //alert(`Successfully marked ${video_title} as watched!`); //Adding watched-text instead
		// Get the checkmark from imageContainer and hide it
		let checkmark = imageContainer.querySelector('.checkmark');
		checkmark.style.display = 'none';
    }

    let filterDropdown = document.querySelector('#filterDropdown');
    let sortDropdown = document.querySelector('#sortDropdown');
    let filterItems = document.querySelectorAll('#filterDropdown + .dropdown-menu .dropdown-item');
    let sortItems = document.querySelectorAll('#sortDropdown + .dropdown-menu .dropdown-item');

    filterItems.forEach(item => {
        item.addEventListener('click', () => {
            let curSort = "{{.Sort}}";
            updatePageWithParams(item.dataset.value, curSort);
        });
        // if item is set to {{.Filter}} then set the default dropdown text to that item
        if (item.dataset.value === "{{.Filter}}" && item.dataset.value !== "all") {
            filterDropdown.innerHTML = item.innerHTML;
        }
    });

    sortItems.forEach(item => {
        item.addEventListener('click', () => {
            let curFilter = "{{.Filter}}";
            updatePageWithParams(curFilter, item.dataset.value);
        });
        // if item is set to {{.Sort}} then set the default dropdown text to that item
        if (item.dataset.value === "{{.Sort}}" && item.dataset.value !== "newest") {
            sortDropdown.innerHTML = item.innerHTML;
        }
    });

    function updatePageWithParams(filter, sort) {
        let baseUrl = window.location.origin + window.location.pathname;
        let searchParams = new URLSearchParams(window.location.search);

        let page = 0;
        {{if .NextPage}}
            page = {{.NextPage}} - 1;
        {{else if .PrevPage}}
            page = {{.PrevPage}} + 1;
        {{end}}

        if (page) {
            searchParams.set('page', page);
        } else {
            searchParams.delete('page');
        }

        if (filter) {
            searchParams.set('filter', filter);
        } else {
            searchParams.delete('filter');
        }

        if (sort) {
            searchParams.set('sort', sort);
        } else {
            searchParams.delete('sort');
        }
        
        // Update the window location
        window.location.href = `${baseUrl}?${searchParams.toString()}`;
    }
  </script>
</body>
</html>
